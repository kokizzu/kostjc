package presentation

// Code generated by 1_codegen_test.go DO NOT EDIT.

import (
	"github.com/gofiber/fiber/v2"

	"kostjc/domain"
)

func ApiRoutes(fw *fiber.App, d *domain.Domain) {

	// AdminBooking
	fw.Post("/"+domain.AdminBookingAction, func(c *fiber.Ctx) error {
		in := domain.AdminBookingIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminBookingAction); err != nil {
			return nil
		}
		out := d.AdminBooking(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// AdminBuilding
	fw.Post("/"+domain.AdminBuildingAction, func(c *fiber.Ctx) error {
		in := domain.AdminBuildingIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminBuildingAction); err != nil {
			return nil
		}
		out := d.AdminBuilding(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// AdminFacility
	fw.Post("/"+domain.AdminFacilityAction, func(c *fiber.Ctx) error {
		in := domain.AdminFacilityIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminFacilityAction); err != nil {
			return nil
		}
		out := d.AdminFacility(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// AdminLocation
	fw.Post("/"+domain.AdminLocationAction, func(c *fiber.Ctx) error {
		in := domain.AdminLocationIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminLocationAction); err != nil {
			return nil
		}
		out := d.AdminLocation(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// AdminMenu
	fw.Post("/"+domain.AdminMenuAction, func(c *fiber.Ctx) error {
		in := domain.AdminMenuIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminMenuAction); err != nil {
			return nil
		}
		out := d.AdminMenu(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// AdminPayment
	fw.Post("/"+domain.AdminPaymentAction, func(c *fiber.Ctx) error {
		in := domain.AdminPaymentIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminPaymentAction); err != nil {
			return nil
		}
		out := d.AdminPayment(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// AdminRoom
	fw.Post("/"+domain.AdminRoomAction, func(c *fiber.Ctx) error {
		in := domain.AdminRoomIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminRoomAction); err != nil {
			return nil
		}
		out := d.AdminRoom(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// AdminStock
	fw.Post("/"+domain.AdminStockAction, func(c *fiber.Ctx) error {
		in := domain.AdminStockIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminStockAction); err != nil {
			return nil
		}
		out := d.AdminStock(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// AdminTenants
	fw.Post("/"+domain.AdminTenantsAction, func(c *fiber.Ctx) error {
		in := domain.AdminTenantsIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminTenantsAction); err != nil {
			return nil
		}
		out := d.AdminTenants(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// AdminUsersManagement
	fw.Post("/"+domain.AdminUsersManagementAction, func(c *fiber.Ctx) error {
		in := domain.AdminUsersManagementIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.AdminUsersManagementAction); err != nil {
			return nil
		}
		out := d.AdminUsersManagement(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// GuestLogin
	fw.Post("/"+domain.GuestLoginAction, func(c *fiber.Ctx) error {
		in := domain.GuestLoginIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.GuestLoginAction); err != nil {
			return nil
		}
		out := d.GuestLogin(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// GuestRegister
	fw.Post("/"+domain.GuestRegisterAction, func(c *fiber.Ctx) error {
		in := domain.GuestRegisterIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.GuestRegisterAction); err != nil {
			return nil
		}
		out := d.GuestRegister(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// GuestResendVerificationEmail
	fw.Post("/"+domain.GuestResendVerificationEmailAction, func(c *fiber.Ctx) error {
		in := domain.GuestResendVerificationEmailIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.GuestResendVerificationEmailAction); err != nil {
			return nil
		}
		out := d.GuestResendVerificationEmail(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// GuestResetPassword
	fw.Post("/"+domain.GuestResetPasswordAction, func(c *fiber.Ctx) error {
		in := domain.GuestResetPasswordIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.GuestResetPasswordAction); err != nil {
			return nil
		}
		out := d.GuestResetPassword(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// GuestVerifyEmail
	fw.Post("/"+domain.GuestVerifyEmailAction, func(c *fiber.Ctx) error {
		in := domain.GuestVerifyEmailIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.GuestVerifyEmailAction); err != nil {
			return nil
		}
		out := d.GuestVerifyEmail(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// StaffBooking
	fw.Post("/"+domain.StaffBookingAction, func(c *fiber.Ctx) error {
		in := domain.StaffBookingIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.StaffBookingAction); err != nil {
			return nil
		}
		out := d.StaffBooking(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// StaffMissingDataReport
	fw.Post("/"+domain.StaffMissingDataReportAction, func(c *fiber.Ctx) error {
		in := domain.StaffMissingDataReportIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.StaffMissingDataReportAction); err != nil {
			return nil
		}
		out := d.StaffMissingDataReport(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// StaffOccupancyReport
	fw.Post("/"+domain.StaffOccupancyReportAction, func(c *fiber.Ctx) error {
		in := domain.StaffOccupancyReportIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.StaffOccupancyReportAction); err != nil {
			return nil
		}
		out := d.StaffOccupancyReport(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// UserLogout
	fw.Post("/"+domain.UserLogoutAction, func(c *fiber.Ctx) error {
		in := domain.UserLogoutIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.UserLogoutAction); err != nil {
			return nil
		}
		out := d.UserLogout(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// UserProfile
	fw.Post("/"+domain.UserProfileAction, func(c *fiber.Ctx) error {
		in := domain.UserProfileIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.UserProfileAction); err != nil {
			return nil
		}
		out := d.UserProfile(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// UserSessionKill
	fw.Post("/"+domain.UserSessionKillAction, func(c *fiber.Ctx) error {
		in := domain.UserSessionKillIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.UserSessionKillAction); err != nil {
			return nil
		}
		out := d.UserSessionKill(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// UserSessionsActive
	fw.Post("/"+domain.UserSessionsActiveAction, func(c *fiber.Ctx) error {
		in := domain.UserSessionsActiveIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.UserSessionsActiveAction); err != nil {
			return nil
		}
		out := d.UserSessionsActive(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

	// UserUpdateProfile
	fw.Post("/"+domain.UserUpdateProfileAction, func(c *fiber.Ctx) error {
		in := domain.UserUpdateProfileIn{}
		if err := webApiParseInput(c, &in.RequestCommon, &in, domain.UserUpdateProfileAction); err != nil {
			return nil
		}
		out := d.UserUpdateProfile(&in)
		return in.ToFiberCtx(c, out, &out.ResponseCommon, in)
	})

}

// Code generated by 1_codegen_test.go DO NOT EDIT.
